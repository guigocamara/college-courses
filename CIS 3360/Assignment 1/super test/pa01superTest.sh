#!/bin/bash
# script to help test and analyze results
# of pa01 for CIS-3360 with McAlpin.

# All credits for this script go to Dr. McAlpin
# Modifications done by Seif Sallam | 10/20/2021
# All bonus expected outputs were generated by Seif Sallam's pa01 program
# Bonus outputs being correct is not a guarantee that your program is perfect
# because my program could have an error, and vice versa.

case $1 in
    pa01.c)
	rm a.out
	gcc pa01.c 
	if [ $? -ne 0 ]; then 
	    echo "Compile of pa01.c failed"
	    echo "Good bye!"
	    exit 1 
	fi
	EXE="./a.out"
	;;
    pa01.cpp)
	rm a.out
	g++ pa01.cpp
	if [ $? -ne 0 ]; then 
	    echo "Compile of pa01.cpp failed"
	    echo "Good bye!"
	    exit 1 
	fi
	EXE="./a.out"
	;;
    pa01.java)
	rm pa01.class
	javac pa01.java
	if [ $? -ne 0 ]; then 
	    echo "Compile of pa01.java failed"
	    echo "Good bye!"
	    exit 1 
	fi
	EXE="java pa01"
	;;
*)
    echo "Invalid source file name"
    echo "->  should be pa01.c, pa01.cpp, or pa01.java"
    exit 1
esac

echo "Compile of pa01 succeded."

PASS_CNT=0

echo -n "Case #1"
eval $EXE k1.txt p1.txt >stu1Output.txt
diff -w stu1Output.txt base1.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match) (output does not match)"
fi

echo -n "Case #2"
eval $EXE k2.txt p2.txt >stu2Output.txt
diff -w stu2Output.txt base2.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

echo -n "Case #3"
eval $EXE k3.txt p3.txt >stu3Output.txt
diff -w stu3Output.txt base3.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

echo -n "Case #4"
eval $EXE k4.txt p4.txt >stu4Output.txt
diff -w stu4Output.txt base4.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi


echo -n "Bonus #1"
eval $EXE kb1.txt pb1.txt > bonusOut1.txt
diff -w bonusOut1.txt expectedOut1.txt > /dev/null
ret=$?
if [[ $ret != 0 ]]; then
	echo " ... fail (output does not match)"
else
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
fi

echo -n "Bonus #2"
eval $EXE kb2.txt pb2.txt > bonusOut2.txt 
diff -w bonusOut2.txt expectedOut2.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

echo -n "Bonus #3"
eval $EXE k1.txt p4.txt > bonusOut3.txt
diff -w bonusOut3.txt expectedOut3.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

echo -n "Bonus #4"
eval $EXE k3.txt pb1.txt > bonusOut4.txt
diff -w bonusOut4.txt expectedOut4.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

echo -n "Bonus #5"
eval $EXE kb5.txt pb5.txt > bonusOut5.txt
diff -w bonusOut5.txt expectedOut5.txt > /dev/null
ret=$?
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

echo -n "Bonus #6"
eval $EXE kb2.txt p4.txt > bonusOut6.txt
diff -w bonusOut6.txt expectedOut6.txt > /dev/null
if [[ $ret -eq 0 ]]; then
	echo " ... PASSED!"
	PASS_CNT=`expr $PASS_CNT + 1`
else
	echo " ... fail (output does not match)"
fi

if [ $PASS_CNT -eq 10 ]; then
	echo " "
	echo "You are a god. Respect, nice work."
	echo " "
	echo "â€Ž       %%%%"
	echo "       %%  %" 
	echo "       %   %%"
    echo "       %   %%" 
    echo "       %%   %%"
    echo "        %    %%" 
    echo "        %%    %%%"
    echo "         %%     %%"
    echo "         %%      %%"
    echo "          %       %%"
    echo "    %%%%%%%        %%"
	echo "  %%%               %%%%%%"
	echo " %%    %%%%            %%%"
	echo " %   %%%  %%%            %%"
	echo " %%        %%%            %"
	echo "  %%    %%%%%%            %"
	echo "  %%%%%%%    %%           %"
	echo "  %%       %%%%           %"
	echo "   %%%%%%%%%  %%         %%"
	echo "    %        %%%%     %%%%"
	echo "    %%    %%%%%%    %%%%%%"
	echo "     %%%%%%    %%  %%"
	echo "       %     %%% %%%"
	echo "        %%%%%%%%%%"
else
	echo "YOU FAILED!!!! YOU SUCK!!!"
	echo "  "
	echo "  |               ________    _____    _____   _____      __"
	echo "  |              |        |  |     |       /  |     |    |  |"
	echo "  |              |        |  |     |      /   |     |    |  |"
	echo "  |              |        |  |     |     /    |     |    |  |"  
	echo "  |              |_______|   |     |    /     |     |    |  |"
	echo "  |              |        |  |     |   /      |     |    |__|"   
	echo "  |              |        |  |     |  /       |     |     __ "
	echo "  |_________     |________|  |_____| /______  |_____|    |__|"
fi

echo " "
echo "Cleaning your output files for you..."
rm -f bonusOut1.txt
rm -f bonusOut2.txt
rm -f bonusOut3.txt
rm -f bonusOut4.txt
rm -f bonusOut5.txt
rm -f bonusOut6.txt
echo "Done!"